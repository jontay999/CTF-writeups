from pwn import *
from libnum import *
from Crypto.Util.number import *
from functools import reduce
from operator import mul
# nc 01.cr.yp.toc.tf 37711
host, port = "01.cr.yp.toc.tf", 37711

n = 99079213864225638211164004707660376360561061293868813414340853792016960003532290684350987975057143145176307506763351191420928302748101383361521210974297633813257059844605439910514985971362362677843666944971712543939026392257685421348762705964915220795881554670574231326045740084163983602187913327355090728057
g = 31337

CRY = "Long Live Crypto :))"
m = bytes_to_long(CRY.encode('utf-8'))

_e = 2 * (int(pow(g, m**2, n)) % 2**152) + 1

factors = [5, 31, 1594624713089, 5500056052324938008435708454209]
assert reduce(mul, factors) == _e


# target
# _e = 2 * (pow(g, m**2, n) % 2**152) ^ 1
# if pow(sd, _e, n) == g: